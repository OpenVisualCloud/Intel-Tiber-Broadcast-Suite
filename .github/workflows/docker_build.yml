name: Docker Build

on:
  workflow_call:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to run scans on'
        default: 'main'
        type: string
  pull_request:
  push:
    branches: [ "main" ]


permissions:
  contents: read

env:
  BUILD_TYPE: "Release"
  CMAKE_BUILD_TYPE: "Release"
  DOCKER_REGISTRY: "ghcr.io"
  DOCKER_LOGIN: "${{ github.repository == 'openvisualcloud/intel-tiber-broadcast-suite' }}"
  DOCKER_REGISTRY_NAMESPACE: 'openvisualcloud/intel-tiber-broadcast-suite'
  DOCKER_IMAGE_BASE: "ghcr.io/openvisualcloud/intel-tiber-broadcast-suite"
  DOCKER_IMAGE_NAME: "tiber-broadcast-suite"
  DOCKER_IMAGE_TAG: "${{ inputs.branch || github.sha || github.ref }}"
  DEBIAN_FRONTEND: "noninteractive"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  docker-tiber:
    name: "Dockerfile build for Intel® Tiber™ Broadcast Suite"
    runs-on: ["self-hosted", "docker", "Linux"]
    timeout-minutes: 180
    permissions:
      contents: read
      packages: write
    env:
      BUILDKIT_STEP_LOG_MAX_SIZE: 50000000
      BUILDKIT_STEP_LOG_MAX_SPEED: 10000000
      DOCKER_TMPDIR: "/mnt/docker/docker-tmp"
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
    - name: "OS-Configuration: Harden Runner"
      uses: step-security/harden-runner@17d0e2bd7d51742c71671bd19fa12bdc9d40a3d6 # v2.8.1
      with:
        egress-policy: audit

    - name: "OS-Configuration: Docker with Buildx Toolkit set up"
      uses: docker/setup-buildx-action@4fd812986e6c8c2a69e18311145f9371337f27d4 # v3.4.0

    - name: "Code-Sync: GitHub git checkout push"
      if: github.event.push || github.event.workflow_dispatch
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      with:
        ref: ${{ inputs.branch || github.sha }}

    - name: "Code-Sync: GitHub git checkout pull_request"
      if: github.event.pull_request
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      with:
        ref: ${{ github.ref }}

    - name: "Docker: Login to ghcr.io Container Registry"
      uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
      if: ${{ env.DOCKER_LOGIN == 'true' }}
      continue-on-error: true
      with:
        registry: "ghcr.io"
        username: "${{ secrets.DOCKER_REGISTRY_LOGIN || github.repository_owner }}"
        password: "${{ secrets.DOCKER_REGISTRY_PASSKEY || secrets.GITHUB_TOKEN }}"

    - name: "Build and push mtl-manager image"
      run: ./build.sh
      env:
        BUILD_TYPE: "CI"
        CMAKE_BUILD_TYPE: "Release"
        LOCAL_INSTALL: "false"
        IMAGE_NAME: "mtl-manager"
        IMAGE_PATH: "./docker/app/Dockerfile"
        BUILD_SCOPE: "./"
        BUILD_STAGE: "manager-stage"

    - name: "Build and push tiber-broadcast-suite image"
      run: ./build.sh
      env:
        BUILD_TYPE: "CI"
        CMAKE_BUILD_TYPE: "Release"
        LOCAL_INSTALL: "false"
        IMAGE_NAME: "tiber-broadcast-suite"
        IMAGE_PATH: "./docker/app/Dockerfile"
        BUILD_SCOPE: "./"
        BUILD_STAGE: "final-stage"

  docker-aux:
    name: "Dockerfile build for Intel® Tiber™ NMOS and BCS containers"
    runs-on: ["self-hosted", "docker", "Linux"]
    timeout-minutes: 180
    permissions:
      contents: read
      packages: write
    env:
      BUILDKIT_STEP_LOG_MAX_SIZE: 50000000
      BUILDKIT_STEP_LOG_MAX_SPEED: 10000000
      DOCKER_TMPDIR: "/mnt/docker/docker-tmp"
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
    - name: "OS-Configuration: Harden Runner"
      uses: step-security/harden-runner@17d0e2bd7d51742c71671bd19fa12bdc9d40a3d6 # v2.8.1
      with:
        egress-policy: audit

    - name: "OS-Configuration: Docker with Buildx Toolkit set up"
      uses: docker/setup-buildx-action@4fd812986e6c8c2a69e18311145f9371337f27d4 # v3.4.0

    - name: "Code-Sync: GitHub git checkout push"
      if: github.event.push || github.event.workflow_dispatch
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      with:
        ref: ${{ inputs.branch || github.sha }}

    - name: "Code-Sync: GitHub git checkout pull_request"
      if: github.event.pull_request
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      with:
        ref: ${{ github.ref }}

    - name: "Docker: Login to ghcr.io Container Registry"
      uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
      if: ${{ env.DOCKER_LOGIN == 'true' }}
      continue-on-error: true
      with:
        registry: "ghcr.io"
        username: "${{ secrets.DOCKER_REGISTRY_LOGIN || github.repository_owner }}"
        password: "${{ secrets.DOCKER_REGISTRY_PASSKEY || secrets.GITHUB_TOKEN }}"

    - name: "Build and push tiber-broadcast-suite-nmos-node image"
      run: ./build.sh
      env:
        BUILD_TYPE: "CI"
        CMAKE_BUILD_TYPE: "Release"
        LOCAL_INSTALL: "false"
        IMAGE_NAME: "tiber-broadcast-suite-nmos-node"
        IMAGE_PATH: "./docker/nmos/Dockerfile"
        BUILD_SCOPE: "./"
        BUILD_STAGE: "final-stage"

    - name: "Build and push bcs-pod-launcher image"
      run: ./build.sh
      env:
        BUILD_TYPE: "CI"
        CMAKE_BUILD_TYPE: "Release"
        LOCAL_INSTALL: "false"
        IMAGE_NAME: "bcs-pod-launcher"
        IMAGE_PATH: "./launcher/Dockerfile"
        BUILD_SCOPE: "./launcher"
        BUILD_STAGE: ""
