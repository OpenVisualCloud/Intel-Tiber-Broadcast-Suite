name: Coverity scan

on:
  push:
  workflow_dispatch:

env:
  BUILD_TYPE: "Release"
  DOCKER_IMAGE_BASE: "ghcr.io/openvisualcloud/intel-tiber-broadcast-suite"
  DOCKER_IMAGE_NAME: "tiber-broadcast-suite-build"
  DOCKER_IMAGE_TAG: "${{ github.sha }}"
  DEBIAN_FRONTEND: "noninteractive"
  COVERITY_CONTARINER: "coverity-tmp-container"

jobs:
  build-stage-build:
    name: 'build BCS build stage'
    runs-on: ['self-hosted', 'Linux', 'cov']
    steps:
      - name: 'setup: checkout repo'
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: "Validation: Build/Push Dokcerfile"
        uses: docker/build-push-action@ca052bb54ab0790a636c9b5f226502c73d547a25 # v5.4.0
        with:
         file: Dockerfile
         push: false
         load: true
         target: build-stage
         cache-from: type=inline
         cache-to: type=inline
         tags: "${{ env.DOCKER_IMAGE_BASE }}/${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_TAG }}"
         platforms: "linux/amd64"
      - name: install coverity in docker
        run: |
         docker run --name ${{ env.COVERITY_CONTARINER }} \
         -v $(pwd):/tmp/coverity \
         -e  COVERITY_PROJECT='Intel-Tiber-Broadcast-Suite' \
         -e  COVERITY_TOKEN=${{ secrets.COVERITY_SCAN_TOKEN }} \
         -e  COVERITY_EMAIL=${{ secrets.COVERITY_SCAN_EMAIL }} \
         -e  LANGUAGE='other' \
          ${{ env.DOCKER_IMAGE_BASE }}/${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_TAG }} \
          /bin/bash -c "cd /tmp/coverity && .github/coverity/install_coverity.sh" 
      - name: commit docker container to new image
        run: |
          docker commit ${{ env.COVERITY_CONTARINER }} \
          ${{ env.DOCKER_IMAGE_BASE }}/${{ env.DOCKER_IMAGE_NAME }}-coverity:${{ env.DOCKER_IMAGE_TAG }}
          docker rm ${{ env.COVERITY_CONTARINER }}
