diff --git a/Dockerfile b/Dockerfile
index f24a67a..a9d04f8 100644
--- a/Dockerfile
+++ b/Dockerfile
@@ -8,6 +8,7 @@ ENV APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=DontWarn
 
 RUN apt-get update && export DEBIAN_FRONTEND=noninteractive && apt-get install -y --no-install-recommends \
     g++ build-essential \
+    autoconf libtool pkg-config clang libc++-dev \
     openssl libssl-dev git wget gnupg curl ca-certificates nano \
     python3 python3-pip python3-setuptools rdma-core && \
 # Avahi:    dbus avahi-daemon libavahi-compat-libdnssd-dev libnss-mdns AND NOT make \
@@ -28,10 +29,17 @@ RUN cd /home && mkdir certs && git config --global http.sslVerify false && \
 
 ## Get source for Sony nmos-cpp
 ## Commit 0fb6b51 corresponds to Conan package nmos-cpp/cci.20221203
-ENV NMOS_CPP_VERSION=0fb6b51737f737ae011cbcc39cdfb2c5236ec59f
+ENV NMOS_CPP_VERSION=f54971298c47a633969e9e9adac824b56fc08da7
 RUN cd /home/ && curl --output - -s -k https://codeload.github.com/sony/nmos-cpp/tar.gz/$NMOS_CPP_VERSION | tar zxvf - -C . && \
     mv ./nmos-cpp-${NMOS_CPP_VERSION} ./nmos-cpp
 
+# FOR NMOS-CPP-CLIENT-NODE in BCS
+COPY ./node_implementation.cpp /home/nmos-cpp/Development/nmos-cpp-node/node_implementation.cpp
+COPY ./main.cpp /home/nmos-cpp/Development/nmos-cpp-node/main.cpp
+
+# Install BCS gRPC client
+COPY ./gRPC/build/ /home/gRPC/build/
+
 ## You should use either Avahi or Apple mDNS - DO NOT use both
 ##
 ## mDNSResponder 878.260.1 Build and install
@@ -42,10 +50,17 @@ RUN cd /home/ && curl --output - -s -k https://codeload.github.com/apple-oss-dis
     patch -d mDNSResponder/ -p1 <nmos-cpp/Development/third_party/mDNSResponder/poll-rather-than-select.patch && \
     cd /home/mDNSResponder/mDNSPosix && make os=linux && make os=linux install
 
-## Build Sony nmos-cpp from sources
-RUN mkdir /home/nmos-cpp/Development/build && \
+## Build Sony nmos-cpp from sources - with workaround to keep latest packages for nmos
+## Remember to use the same veriosn of nmos and registry
+## First download all packages automatically using conan package manager, than build project
+RUN pip install --upgrade conan~=2.4 && \
+    cd /home/nmos-cpp/Development/ && \
+    conan profile detect && \
+    conan install --requires=nmos-cpp/cci.20240223 --deployer=direct_deploy --build=missing && \
+    mkdir /home/nmos-cpp/Development/build && \
     cd /home/nmos-cpp/Development/build && \
     cmake \
+    -DCMAKE_PROJECT_TOP_LEVEL_INCLUDES:STRING="third_party/cmake/conan_provider.cmake" \
     -G "Unix Makefiles" \
     -DCMAKE_BUILD_TYPE:STRING="MinSizeRel" \
     -DCMAKE_CONFIGURATION_TYPES:STRING="MinSizeRel" \
@@ -88,12 +103,13 @@ RUN cd /home/nmos-js/Development && \
     cp -rf /home/nmos-js/Development/build/* /home/admin
 
 ## Move executables, libraries and clean up container as much as possible
-RUN cd /home/nmos-cpp/Development/build && \
-    cp nmos-cpp-node nmos-cpp-registry /home && \
+RUN cd /home/nmos-cpp/Development/build/ && \
+    cp  ./nmos-cpp-node /home && \
+    cp  ./nmos-cpp-registry /home && \
     cd /home && rm -rf .git nmos-cpp nmos-js
 
 ## Re-build container for optimised runtime environment using clean Ubuntu Bionic release
-FROM ubuntu:focal
+FROM ubuntu:jammy
 
 ##Copy required files from build container
 COPY --from=stage1-build /home /home
@@ -105,8 +121,8 @@ RUN apt-get update && export DEBIAN_FRONTEND=noninteractive && apt-get install -
     cd /home/mDNSResponder/mDNSPosix && make os=linux install && \
     cd /home && rm -rf /home/mDNSResponder /etc/nsswitch.conf.pre-mdns && \
     curl -sS -k "https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x77b7346a59027b33c10cafe35e64e954262c4500" | apt-key add - && \
-    echo "deb http://ppa.launchpad.net/mosquitto-dev/mosquitto-ppa/ubuntu focal main" | tee /etc/apt/sources.list.d/mosquitto.list && \
-    apt-get update && apt-get install -y --no-install-recommends mosquitto && \
+    echo "deb http://ppa.launchpad.net/mosquitto-dev/mosquitto-ppa/ubuntu jammy main" | tee /etc/apt/sources.list.d/mosquitto.list && \
+    apt-get update && apt-get install -y --no-install-recommends mosquitto libc6 && \
     apt-get remove --purge -y make gnupg && \
     apt-get autoremove -y && \
     apt-get clean -y --no-install-recommends && \
diff --git a/Makefile b/Makefile
index f04cb04..afdb54c 100644
--- a/Makefile
+++ b/Makefile
@@ -26,10 +26,10 @@ buildx: version
 # Example below on how to push multi-arch manifest to Amazon ECR
 #	docker buildx build --platform linux/amd64,linux/arm64 -t 299832127819.dkr.ecr.us-east-1.amazonaws.com/mellanox/$(NAME):$(VERSION) --build-arg makemt=$(NPROC) --push .
 
-run: build
+run:
 	docker run -d -it --net=host --name $(NAME)-registry --rm $(NAME):$(VERSION)
 
-runnode: buildnode
+runnode:
 	docker run -d -it --net=host --name $(NAME)-node --rm $(NAME)-node:$(VERSION)
 
 start: run
diff --git a/node.json b/node.json
index 6d36960..cf97d42 100644
--- a/node.json
+++ b/node.json
@@ -1,7 +1,19 @@
 {
-"logging_level": 0,
-"http_port": 11000,
-"events_ws_port": 11001,
-"label": "nvidia-container-node",
-"how_many": 5
-}
+    "logging_level": 0,
+    "http_port": 84,
+    "label": "intel-broadcast-suite",
+    "senders": ["v","d"],
+    "senders_count": [2, 1],
+    "receivers": ["v"],
+    "receivers_count": [4],
+    "device_tags": {
+        "pipeline": ["multiviewer"]
+    },
+    "frame_rate": { "numerator": 60, "denominator": 1 },
+    "frame_width": 1920,
+    "frame_height": 1080,
+    "video_type": "video/jxsv",
+    "domain": "local",
+    "ffmpeg_grpc_server_address": "<ip_of_ffmpeg_grpc_server>",
+    "ffmpeg_grpc_server_port": "50051"
+}
\ No newline at end of file
diff --git a/registry.json b/registry.json
index db57a50..e04a8f8 100644
--- a/registry.json
+++ b/registry.json
@@ -1,9 +1,9 @@
 {
-"pri": 10,
-"logging_level": 0,
-"http_trace": false,
-"label": "nvidia-container",
-"http_port": 8010,
-"query_ws_port": 8011,
-"registration_expiry_interval": 12
+    "pri": 99,
+    "logging_level": -20,
+    "http_trace": false,
+    "label": "nmos-bcs-registry-controller",
+    "http_port": 80,
+    "query_ws_port": 81,
+    "registration_expiry_interval": 12
 }
